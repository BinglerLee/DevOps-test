name: chocolatine
run-name: chocolatine

on: [push, pull_request]

env:
    MIRROR_URL: "git@github.com:EpitechPromo2027/B-DOP-200-LYN-2-1-chocolatine-lee.bingler.git"
    EXECUTABLES: "antman,giantman"

jobs:
    check_coding_style:
        runs-on: ubuntu-latest
        container: ghcr.io/epitech/coding-style-checker:latest
        steps:

        - name: checkout
          uses: actions/checkout@v3

        - name: coding_style_check
          run: check.sh $(pwd) $(pwd)
          continue-on-error: true

        - name: check_is_theres_an_error
          run: |
            if [ ! -f "coding-style-reports.log" ]; then
              exit 0
            elif [ $(wc -u "coding-style-reports.log" | awk '{print $1}') == "0" ]; then
              exit 0
            fi
            exit 1
          continue-on-error: true

        - name: display_error
          run: echo "::error file=coding-style-reports.log::mehh"

    check_program_compilation:
        needs: [check_coding_style]
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker:latest

        steps:
        - name: checkout
          uses: actions/checkout@v3

        - name: make_the_binarie
          run: make
          timeout-minutes: 2
        
        - name: make_clean
          run: make clean
          timeout-minutes: 2

        - name: check_exec_list_exist
          run: |
              IFS=',' read -r -a array << $EXECUTABLES
              for i in "${array[@]}"
              do
                  if [ ! -x $"i" ]; then
                      echo "::error::Binarie $i does not exist.\n"
                      exit 1
                  fi
              done

    run_test:
        needs: [check_program_compilation]
        runs-on: ubuntu-latest
        container: epitechcontent/epitest-docker:latest

        steps:
        - name: checkout
          uses: actions/checkout@v3

        - name: test_run
          run: make tests_run

    push_to_mirror:
        if: ${{ github.event_name == 'push' }}
        needs: [run_test]
        runs-on: ubuntu-latest

        steps:
        - name: checkout
          uses: actions/checkout@v3
          with: 
            fetch-depth: 0

        - name: mirroring
          uses: pixta-dev/repository-mirroring-action@v1
          with:
            target_repo_url:
              ${{ env.MIRROR_URL }}
            ssh_private_key:
                ${{ secrets.GIT_SSH_PRIVATE_KEY }}
